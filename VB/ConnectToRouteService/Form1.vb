Imports DevExpress.XtraMap
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Windows.Forms

Namespace ConnectToRouteService
    Partial Public Class Form1
        Inherits Form

        Private Const bingKey As String = "YourBingKeyHere"
        Private ReadOnly Property RouteLayer() As InformationLayer
            Get
                Return CType(mapControl1.Layers("RouteLayer"), InformationLayer)
            End Get
        End Property
        Private ReadOnly Property RouteProvider() As BingRouteDataProvider
            Get
                Return CType(RouteLayer.DataProvider, BingRouteDataProvider)
            End Get
        End Property

        Public Sub New()
            InitializeComponent()
            RouteLayer.DataProvider = New BingRouteDataProvider() With {.BingKey = bingKey}
        End Sub

        Private storage As New MapItemStorage()

        Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles MyBase.Load
'            #Region "#Waypoints"
            ' Create three waypoints and add them to a route waypoints list. 
            Dim waypoints As New List(Of RouteWaypoint)()
            waypoints.Add(New RouteWaypoint("New York", New GeoPoint(41.145556, -73.995)))
            waypoints.Add(New RouteWaypoint("Oklahoma", New GeoPoint(36.131389, -95.937222)))
            waypoints.Add(New RouteWaypoint("Las Vegas", New GeoPoint(36.175, -115.136389)))

            ' Handle the BingRouteDataProvider.LayerItemsGenerating event.
            AddHandler RouteProvider.LayerItemsGenerating, AddressOf routeLayerItemsGenerating
            AddHandler RouteProvider.RouteCalculated, AddressOf RouteProvider_RouteCalculated
            AddHandler RouteLayer.DataRequestCompleted, AddressOf RouteLayer_DataRequestCompleted
            RouteProvider.GenerateLayerItems = False

            ' Call the BingRouteDataProvider.CalculateRoute method.
            RouteProvider.CalculateRoute(waypoints)
'            #End Region ' #Waypoints

            mapControl1.Layers.Add(New VectorItemsLayer With {.Data = storage})
        End Sub

        Private Sub RouteProvider_RouteCalculated(ByVal sender As Object, ByVal e As BingRouteCalculatedEventArgs)
            Dim result As RouteCalculationResult = e.CalculationResult
            If result.ResultCode <> RequestResultCode.Success Then
                Return
            End If

            Dim polyline As New MapPolyline()
            polyline.Points.AddRange(result.RouteResults(0).RoutePath)

            ' Customize the appearance of the calculated route path. 
            polyline.Stroke = Color.FromArgb(&HFF, &HFE, &H72, &HFF)
            polyline.StrokeWidth = 4

            storage.Items.Clear()
            storage.Items.Add(polyline)
        End Sub

        #Region "#DataRequestCompleted"
        Private Sub RouteLayer_DataRequestCompleted(ByVal sender As Object, ByVal e As RequestCompletedEventArgs)
            ' Adjust the Map Control's zoom level and center point.
            mapControl1.ZoomToFitLayerItems()
        End Sub
        #End Region ' #DataRequestCompleted

        #Region "#LayerItemsGenerating"
        Private Sub routeLayerItemsGenerating(ByVal sender As Object, ByVal e As LayerItemsGeneratingEventArgs)
            ' Customuze autogenerated items.
            If e.Cancelled OrElse (e.Error IsNot Nothing) Then
                Return
            End If

            For Each item As MapItem In e.Items
                Dim polyline As MapPolyline = TryCast(item, MapPolyline)
                If polyline IsNot Nothing Then
                    polyline.Stroke = Color.FromArgb(&HFF, &HCC, &H1C, &H1C)
                    polyline.StrokeWidth = 4
                End If
            Next item
        End Sub
        #End Region ' #LayerItemsGenerating
    End Class
End Namespace